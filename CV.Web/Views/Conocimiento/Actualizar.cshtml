@model ConocimientoDTO

<div class="container wow fadeInUp">
    <div class="row">

        <div class="col-lg-9 col-sm-9 text-capitalize">
            <div class="col-sm-12">
                <a href="@Url.Action("Index", "Conocimiento")"><p class="btn btn-lg btn-primary text-uppercase"><i class="fa fa-chevron-circle-left"></i> Volver</p></a>
            </div>

            <h2>Editar Conocimiento</h2>

            <form method="post" action="@Url.Action("Actualizar", "Educacion")">
                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()
                @if (ViewBag.ObjUsuario != null)
                {
                    <input type="hidden" value="@ViewBag.ObjUsuario.UsuarioId" name="UsuarioId" />
                }
                @Html.HiddenFor(x => x.ConocimientoId)
                <div class="col-sm-9 form-group">
                    <label for="Descripcion">Descripción: </label>
                    @Html.TextBoxFor(x => x.Descripcion, new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(x => x.Descripcion)

                </div>
                <div class="col-sm-9 form-group">
                    <label for="Nivel">Nivel:</label>
                    @Html.DropDownListFor(x => x.Nivel, new SelectList(new string[] { "--- Selecionar Nivel ---", "Bajo", "Intermedio", "Alto" }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Nivel)
                </div>

               <div class="col-sm-6 form-group">
                    <button type="submit" class="btn btn-success btn-lg">Editar</button>
                </div>
            </form>
        </div>
    </div>
</div>
<hr class="primary" />